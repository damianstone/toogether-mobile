// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nested navigators renders succesfully as direct child 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottomColor": "#a7a7aa",
              "flex": 1,
              "shadowColor": "#a7a7aa",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.9)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              Sub
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransition={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "overflow": undefined,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <PanGestureHandler
            enabled={false}
            hitSlop={
              Object {
                "right": -700,
              }
            }
            maxDeltaY={20}
            minOffsetX={5}
            onHandlerStateChange={[Function]}
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        pointerEvents="box-none"
                        style={
                          Object {
                            "zIndex": 1,
                          }
                        }
                      >
                        <View
                          accessibilityElementsHidden={false}
                          importantForAccessibility="auto"
                          onLayout={[Function]}
                          pointerEvents="box-none"
                          style={null}
                        >
                          <View
                            pointerEvents="box-none"
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                                "zIndex": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#fff",
                                  "borderBottomColor": "#a7a7aa",
                                  "flex": 1,
                                  "shadowColor": "#a7a7aa",
                                  "shadowOffset": Object {
                                    "height": 0.5,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0.85,
                                  "shadowRadius": 0,
                                }
                              }
                            />
                          </View>
                          <View
                            pointerEvents="box-none"
                            style={
                              Object {
                                "height": 44,
                                "maxHeight": undefined,
                                "minHeight": undefined,
                                "opacity": undefined,
                                "transform": undefined,
                              }
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                            />
                            <View
                              pointerEvents="box-none"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flex": 1,
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "marginHorizontal": 16,
                                    "opacity": 1,
                                  }
                                }
                              >
                                <Text
                                  accessibilityRole="header"
                                  aria-level="1"
                                  numberOfLines={1}
                                  onLayout={[Function]}
                                  style={
                                    Object {
                                      "color": "rgba(0, 0, 0, 0.9)",
                                      "fontSize": 17,
                                      "fontWeight": "600",
                                    }
                                  }
                                >
                                  Home
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          pointerEvents="box-none"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          />
                          <View
                            accessibilityElementsHidden={false}
                            closing={false}
                            gestureVelocityImpact={0.3}
                            importantForAccessibility="auto"
                            onClose={[Function]}
                            onGestureBegin={[Function]}
                            onGestureCanceled={[Function]}
                            onGestureEnd={[Function]}
                            onOpen={[Function]}
                            onTransition={[Function]}
                            pointerEvents="box-none"
                            style={
                              Array [
                                Object {
                                  "overflow": undefined,
                                },
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ]
                            }
                            transitionSpec={
                              Object {
                                "close": Object {
                                  "animation": "spring",
                                  "config": Object {
                                    "damping": 500,
                                    "mass": 3,
                                    "overshootClamping": true,
                                    "restDisplacementThreshold": 10,
                                    "restSpeedThreshold": 10,
                                    "stiffness": 1000,
                                  },
                                },
                                "open": Object {
                                  "animation": "spring",
                                  "config": Object {
                                    "damping": 500,
                                    "mass": 3,
                                    "overshootClamping": true,
                                    "restDisplacementThreshold": 10,
                                    "restSpeedThreshold": 10,
                                    "stiffness": 1000,
                                  },
                                },
                              }
                            }
                          >
                            <View
                              needsOffscreenAlphaCompositing={false}
                              pointerEvents="box-none"
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <PanGestureHandler
                                enabled={false}
                                hitSlop={
                                  Object {
                                    "right": -700,
                                  }
                                }
                                maxDeltaY={20}
                                minOffsetX={5}
                                onHandlerStateChange={[Function]}
                              >
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                      "transform": Array [
                                        Object {
                                          "translateX": 0,
                                        },
                                        Object {
                                          "translateX": 0,
                                        },
                                      ],
                                    }
                                  }
                                >
                                  <View
                                    pointerEvents="none"
                                    style={
                                      Object {
                                        "backgroundColor": "rgb(242, 242, 242)",
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "shadowColor": "#000",
                                        "shadowOffset": Object {
                                          "height": 1,
                                          "width": -1,
                                        },
                                        "shadowOpacity": 0.3,
                                        "shadowRadius": 5,
                                        "top": 0,
                                        "width": 3,
                                      }
                                    }
                                  />
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "overflow": "hidden",
                                        },
                                        Array [
                                          Object {
                                            "backgroundColor": "rgb(242, 242, 242)",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "flex": 1,
                                          "flexDirection": "column-reverse",
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "flex": 1,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </PanGestureHandler>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </PanGestureHandler>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Nested navigators throw when trying to pass navigation prop 1`] = `"No \\"routes\\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop"`;
