{"version":3,"sources":["CardSheet.tsx"],"names":["React","forwardRef","CardSheet","enabled","layout","style","rest","ref","fill","setFill","useState","useEffect","document","body","width","clientWidth","height","clientHeight","styles","page","card","StyleSheet","create","minHeight","flex","overflow"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAQA;AACA;AACA;AACA;4BACeA,KAAK,CAACC,UAAN,CAA8B,SAASC,SAAT,CAC3C;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,KAAnB;AAA0B,KAAGC;AAA7B,CAD2C,EAE3CC,GAF2C,EAG3C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAxB;AAEAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,QAAI,OAAOC,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACC,IAAjD,EAAuD;AACrD;AACA;AACD;;AAED,UAAMC,KAAK,GAAGF,QAAQ,CAACC,IAAT,CAAcE,WAA5B;AACA,UAAMC,MAAM,GAAGJ,QAAQ,CAACC,IAAT,CAAcI,YAA7B;AAEAR,IAAAA,OAAO,CAACK,KAAK,KAAKV,MAAM,CAACU,KAAjB,IAA0BE,MAAM,KAAKZ,MAAM,CAACY,MAA7C,CAAP;AACD,GAVD,EAUG,CAACZ,MAAM,CAACY,MAAR,EAAgBZ,MAAM,CAACU,KAAvB,CAVH;AAYA,sBACE,oBAAC,iBAAD,eACMR,IADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,KAAK,EAAE,CAACJ,OAAO,IAAIK,IAAX,GAAkBU,MAAM,CAACC,IAAzB,GAAgCD,MAAM,CAACE,IAAxC,EAA8Cf,KAA9C;AAHT,KADF;AAOD,CAzBc,C;;;;AA2Bf,MAAMa,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,SAAS,EAAE;AADP,GADyB;AAI/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAJyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, ViewProps, StyleSheet } from 'react-native';\n\ntype Props = ViewProps & {\n  enabled: boolean;\n  layout: { width: number; height: number };\n  children: React.ReactNode;\n};\n\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport default React.forwardRef<View, Props>(function CardSheet(\n  { enabled, layout, style, ...rest },\n  ref\n) {\n  const [fill, setFill] = React.useState(false);\n\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n\n  return (\n    <View\n      {...rest}\n      ref={ref}\n      style={[enabled && fill ? styles.page : styles.card, style]}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%',\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]}