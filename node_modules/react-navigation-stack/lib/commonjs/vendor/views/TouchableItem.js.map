{"version":3,"sources":["TouchableItem.tsx"],"names":["ANDROID_VERSION_LOLLIPOP","TouchableItem","borderless","pressColor","style","children","rest","Platform","OS","Version","TouchableNativeFeedback","canUseNativeForeground","Ripple","React","Children","only"],"mappings":";;;;;;;AAOA;;AACA;;;;;;;;AAiBA,MAAMA,wBAAwB,GAAG,EAAjC;;AAEe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,UAAU,GAAG,KADuB;AAEpCC,EAAAA,UAAU,GAAG,oBAFuB;AAGpCC,EAAAA,KAHoC;AAIpCC,EAAAA,QAJoC;AAKpC,KAAGC;AALiC,CAAvB,EAML;AACR;;;;;;;;AAQA,MACEC,sBAASC,EAAT,KAAgB,SAAhB,IACAD,sBAASE,OAAT,IAAoBT,wBAFtB,EAGE;AACA,wBACE,oBAAC,oCAAD,eACMM,IADN;AAEE,MAAA,aAAa,EAAEI,qCAAwBC,sBAAxB,EAFjB;AAGE,MAAA,UAAU,EAAED,qCAAwBE,MAAxB,CAA+BT,UAA/B,EAA2CD,UAA3C;AAHd,qBAKE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEE;AAAb,OAAqBS,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBV,QAApB,CAArB,CALF,CADF;AASD,GAbD,MAaO;AACL,wBACE,oBAAC,6BAAD;AAAkB,MAAA,KAAK,EAAED;AAAzB,OAAoCE,IAApC,GACGD,QADH,CADF;AAKD;AACF","sourcesContent":["/**\n * TouchableItem provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity to handle platform differences.\n *\n * On Android, you can pass the props of TouchableNativeFeedback.\n * On other platforms, you can pass the props of TouchableOpacity.\n */\nimport * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nexport type Props = ViewProps & {\n  pressColor?: string;\n  disabled?: boolean;\n  borderless?: boolean;\n  delayPressIn?: number;\n  onPress?: () => void;\n  children: React.ReactNode;\n};\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default function TouchableItem({\n  borderless = false,\n  pressColor = 'rgba(0, 0, 0, .32)',\n  style,\n  children,\n  ...rest\n}: Props) {\n  /*\n   * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n   * therefore only enable it on Android Lollipop and above.\n   *\n   * All touchables on Android should have the ripple effect according to\n   * platform design guidelines.\n   * We need to pass the background prop to specify a borderless ripple effect.\n   */\n  if (\n    Platform.OS === 'android' &&\n    Platform.Version >= ANDROID_VERSION_LOLLIPOP\n  ) {\n    return (\n      <TouchableNativeFeedback\n        {...rest}\n        useForeground={TouchableNativeFeedback.canUseNativeForeground()}\n        background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n      >\n        <View style={style}>{React.Children.only(children)}</View>\n      </TouchableNativeFeedback>\n    );\n  } else {\n    return (\n      <TouchableOpacity style={style} {...rest}>\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n"]}