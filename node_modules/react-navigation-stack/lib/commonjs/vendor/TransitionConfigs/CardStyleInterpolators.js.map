{"version":3,"sources":["CardStyleInterpolators.tsx"],"names":["add","multiply","Animated","forHorizontalIOS","current","next","inverted","layouts","screen","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","isLandscape","topOffset","statusBarHeight","top","aspectRatio","scale","borderRadius","overflow","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forNoAnimation"],"mappings":"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","sourcesContent":["import { Animated } from 'react-native';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport conditional from '../utils/conditional';\nimport type {\n  StackCardInterpolationProps,\n  StackCardInterpolatedStyle,\n} from '../types';\n\nconst { add, multiply } = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.width, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const translateUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.width * -0.3],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateX: translateFocused },\n        // Translation for the animation of the card on top of this\n        { translateX: translateUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n    shadowStyle: { shadowOpacity },\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS({\n  current,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateY },\n      ],\n    },\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS({\n  index,\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n  insets,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateY = multiply(\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [\n        screen.height,\n        index === 0 ? 0 : topOffset,\n        (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio,\n      ],\n    }),\n    inverted\n  );\n\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1],\n  });\n\n  const scale = isLandscape\n    ? 1\n    : progress.interpolate({\n        inputRange: [0, 1, 2],\n        outputRange: [\n          1,\n          1,\n          screen.width ? 1 - (topOffset * 2) / screen.width : 1,\n        ],\n      });\n\n  const borderRadius = isLandscape\n    ? 0\n    : index === 0\n    ? progress.interpolate({\n        inputRange: [0, 1, 1.0001, 2],\n        outputRange: [0, 0, isIphoneX() ? 38 : 0, 10],\n      })\n    : 10;\n\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{ translateY }, { scale }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.08, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 0.5, 0.9, 1],\n      outputRange: [0, 0.25, 0.7, 1],\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const containerTranslateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * (95.9 / 100) * -1, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.height * (2 / 100) * -1],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{ translateY: containerTranslateY }],\n    },\n    cardStyle: {\n      transform: [\n        { translateY: cardTranslateYFocused },\n        { translateY: cardTranslateYUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Q.\n */\nexport function forScaleFromCenterAndroid({\n  current,\n  next,\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0],\n  });\n\n  const scale = conditional(\n    closing,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.9, 1],\n      extrapolate: 'clamp',\n    }),\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [0.85, 1, 1.1],\n    })\n  );\n\n  return {\n    containerStyle: {\n      opacity,\n      transform: [{ scale }],\n    },\n  };\n}\n\nexport function forNoAnimation(): StackCardInterpolatedStyle {\n  return {};\n}\n"]}