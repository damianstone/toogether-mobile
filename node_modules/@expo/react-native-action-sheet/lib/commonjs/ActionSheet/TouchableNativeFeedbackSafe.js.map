{"version":3,"sources":["TouchableNativeFeedbackSafe.tsx"],"names":["CustomTouchableOpacity","props","children","React","Component","SelectableBackground","SelectableBackgroundBorderless","Ripple","color","borderless","TouchableComponent","Platform","select","web","default","Version","TouchableNativeFeedback","TouchableNativeFeedbackSafe","style"],"mappings":"kyBAAA,oDACA,yC,+1BASMA,CAAAA,sB,oWAKK,CACP,MAAO,qBAAC,6BAAD,0BAAsB,KAAKC,KAA3B,mEAAmC,KAAKA,KAAL,CAAWC,QAA9C,CAAP,CACD,C,oCAPkCC,KAAK,CAACC,S,EAArCJ,sB,CACGK,oB,CAAuB,iBAAO,EAAP,E,CAD1BL,sB,CAEGM,8B,CAAiC,iBAAO,EAAP,E,CAFpCN,sB,CAGGO,M,CAAS,SAACC,KAAD,CAAgBC,UAAhB,QAA0C,EAA1C,E,CAOlB,GAAMC,CAAAA,kBAAkB,CAAGC,sBAASC,MAAT,CAAgB,CACzCC,GAAG,CAAEb,sBADoC,CAEzCc,OAAO,CAAEH,sBAASI,OAAT,EAAoB,EAApB,CAAyBf,sBAAzB,CAAkDgB,oCAFlB,CAAhB,CAA3B,C,GAUqBC,CAAAA,2B,iYAKV,CACP,GAAIP,kBAAkB,GAAKM,oCAA3B,CAAoD,CAClD,MACE,qBAAC,kBAAD,0BAAwB,KAAKf,KAA7B,EAAoC,KAAK,CAAE,EAA3C,iEACE,oBAAC,iBAAD,EAAM,KAAK,CAAE,KAAKA,KAAL,CAAWiB,KAAxB,iEAAgC,KAAKjB,KAAL,CAAWC,QAA3C,CADF,CADF,CAKD,CAGD,MAAO,qBAAC,kBAAD,0BAAwB,KAAKD,KAA7B,mEAAqC,KAAKA,KAAL,CAAWC,QAAhD,CAAP,CACD,C,yCAhBsDC,KAAK,CAACC,S,8CAA1Ca,2B,CACZZ,oB,CAAuBK,kBAAkB,CAACL,oB,CAD9BY,2B,CAEZX,8B,CAAiCI,kBAAkB,CAACJ,8B,CAFxCW,2B,CAGZV,M,CAASG,kBAAkB,CAACH,M","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedbackProps,\n} from 'react-native';\n\n// This TouchableOpacity has the same staic method of TouchableNativeFeedback\nclass CustomTouchableOpacity extends React.Component {\n  static SelectableBackground = () => ({});\n  static SelectableBackgroundBorderless = () => ({});\n  static Ripple = (color: string, borderless?: boolean) => ({});\n\n  render() {\n    return <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>;\n  }\n}\n\nconst TouchableComponent = Platform.select({\n  web: CustomTouchableOpacity,\n  default: Platform.Version <= 20 ? CustomTouchableOpacity : TouchableNativeFeedback,\n});\n\ntype Props = TouchableWithoutFeedbackProps & {\n  pressInDelay: number;\n  background: any;\n};\n\nexport default class TouchableNativeFeedbackSafe extends React.Component<Props> {\n  static SelectableBackground = TouchableComponent.SelectableBackground;\n  static SelectableBackgroundBorderless = TouchableComponent.SelectableBackgroundBorderless;\n  static Ripple = TouchableComponent.Ripple;\n\n  render() {\n    if (TouchableComponent === TouchableNativeFeedback) {\n      return (\n        <TouchableComponent {...this.props} style={{}}>\n          <View style={this.props.style}>{this.props.children}</View>\n        </TouchableComponent>\n      );\n    }\n\n    // @ts-ignore: JSX element type 'TouchableComponent' does not have any construct or call signatures\n    return <TouchableComponent {...this.props}>{this.props.children}</TouchableComponent>;\n  }\n}\n"]}