{"version":3,"sources":["index.ios.tsx"],"names":["React","ActionSheetIOS","View","ActionSheet","props","pointerEvents","flex","Children","only","children","dataOptions","onSelect","cancelButtonIndex","destructiveButtonIndex","options","tintColor","cancelButtonTintColor","disabledButtonIndices","iosOptions","title","undefined","message","anchor","userInterfaceStyle","showActionSheetWithOptions","Component"],"mappings":"omCAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,cAAT,CAAyBC,IAAzB,KAAgD,cAAhD,C,GAWqBC,CAAAA,W,sQACV,CACP,MACE,qBAAC,IAAD,EAAM,aAAa,CAAE,KAAKC,KAAL,CAAWC,aAAhC,CAA+C,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAtD,gEACGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB,KAAKJ,KAAL,CAAWK,QAA/B,CADH,CADF,CAKD,C,8EAE0BC,W,CAAoCC,Q,CAAoB,IAG/EC,CAAAA,iBAH+E,CAS7EF,WAT6E,CAG/EE,iBAH+E,CAI/EC,sBAJ+E,CAS7EH,WAT6E,CAI/EG,sBAJ+E,CAK/EC,OAL+E,CAS7EJ,WAT6E,CAK/EI,OAL+E,CAM/EC,SAN+E,CAS7EL,WAT6E,CAM/EK,SAN+E,CAO/EC,qBAP+E,CAS7EN,WAT6E,CAO/EM,qBAP+E,CAQ/EC,qBAR+E,CAS7EP,WAT6E,CAQ/EO,qBAR+E,CAUjF,GAAMC,CAAAA,UAAiC,CAAG,CACxCN,iBAAiB,CAAjBA,iBADwC,CAExCC,sBAAsB,CAAtBA,sBAFwC,CAGxCC,OAAO,CAAPA,OAHwC,CAIxCC,SAAS,CAATA,SAJwC,CAKxCC,qBAAqB,CAArBA,qBALwC,CAMxCC,qBAAqB,CAArBA,qBANwC,CAQxCE,KAAK,CAAET,WAAW,CAACS,KAAZ,EAAqBC,SARY,CASxCC,OAAO,CAAEX,WAAW,CAACW,OAAZ,EAAuBD,SATQ,CAUxCE,MAAM,CAAEZ,WAAW,CAACY,MAAZ,EAAsBF,SAVU,CAWxCG,kBAAkB,CAAEb,WAAW,CAACa,kBAAZ,EAAkCH,SAXd,CAA1C,CAcAnB,cAAc,CAACuB,0BAAf,CAA0CN,UAA1C,CAAsDP,QAAtD,EACD,C,yBAlCsCX,KAAK,CAACyB,S,SAA1BtB,W","sourcesContent":["import * as React from 'react';\nimport { ActionSheetIOS, View, ViewProps } from 'react-native';\n\nimport { ActionSheetIOSOptions } from '../types';\n\ninterface Props {\n  readonly children: React.ReactNode;\n  readonly pointerEvents?: ViewProps['pointerEvents'];\n}\n\ntype onSelect = (buttonIndex: number) => void;\n\nexport default class ActionSheet extends React.Component<Props> {\n  render() {\n    return (\n      <View pointerEvents={this.props.pointerEvents} style={{ flex: 1 }}>\n        {React.Children.only(this.props.children)}\n      </View>\n    );\n  }\n\n  showActionSheetWithOptions(dataOptions: ActionSheetIOSOptions, onSelect: onSelect) {\n    // ...dataOptions include other keys which use in android and web, thats why `Android-Only options` Crash on IOS\n    const {\n      cancelButtonIndex,\n      destructiveButtonIndex,\n      options,\n      tintColor,\n      cancelButtonTintColor,\n      disabledButtonIndices,\n    } = dataOptions;\n    const iosOptions: ActionSheetIOSOptions = {\n      cancelButtonIndex,\n      destructiveButtonIndex,\n      options,\n      tintColor,\n      cancelButtonTintColor,\n      disabledButtonIndices,\n      // A null title or message on iOS causes a crash\n      title: dataOptions.title || undefined,\n      message: dataOptions.message || undefined,\n      anchor: dataOptions.anchor || undefined,\n      userInterfaceStyle: dataOptions.userInterfaceStyle || undefined,\n    };\n    // @ts-ignore: Even though ActionSheetIOS supports array of numbers for `destructiveIndex` the types are not yet updated. See https://github.com/facebook/react-native/pull/18254.\n    ActionSheetIOS.showActionSheetWithOptions(iosOptions, onSelect);\n  }\n}\n"]}