{"version":3,"file":"withConfigPlugins.js","names":["withConfigPlugins","config","skipPlugins","Array","isArray","plugins","length","withPlugins","serializeAfterStaticPlugins"],"sources":["../../src/plugins/withConfigPlugins.ts"],"sourcesContent":["import { ConfigPlugin, withPlugins } from '@expo/config-plugins';\n\nimport { serializeAfterStaticPlugins } from '../Serialize';\n\n/**\n * Resolves static plugins array as config plugin functions.\n *\n * @param config\n * @param projectRoot\n */\nexport const withConfigPlugins: ConfigPlugin<boolean> = (config, skipPlugins) => {\n  // @ts-ignore: plugins not on config type yet -- TODO\n  if (!Array.isArray(config.plugins) || !config.plugins?.length) {\n    return config;\n  }\n  if (!skipPlugins) {\n    // Resolve and evaluate plugins\n    // @ts-ignore: TODO: add plugins to the config schema\n    config = withPlugins(config, config.plugins);\n  } else {\n    // Delete the plugins array in case someone added functions or other values which cannot be automatically serialized.\n    delete config.plugins;\n  }\n  // plugins aren't serialized by default, serialize the plugins after resolving them.\n  return serializeAfterStaticPlugins(config);\n};\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,iBAAwC,GAAG,CAACC,MAAD,EAASC,WAAT,KAAyB;EAAA;;EAC/E;EACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACI,OAArB,CAAD,IAAkC,qBAACJ,MAAM,CAACI,OAAR,4CAAC,gBAAgBC,MAAjB,CAAtC,EAA+D;IAC7D,OAAOL,MAAP;EACD;;EACD,IAAI,CAACC,WAAL,EAAkB;IAChB;IACA;IACAD,MAAM,GAAG,IAAAM,4BAAA,EAAYN,MAAZ,EAAoBA,MAAM,CAACI,OAA3B,CAAT;EACD,CAJD,MAIO;IACL;IACA,OAAOJ,MAAM,CAACI,OAAd;EACD,CAZ8E,CAa/E;;;EACA,OAAO,IAAAG,wCAAA,EAA4BP,MAA5B,CAAP;AACD,CAfM"}