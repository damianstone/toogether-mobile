{"version":3,"file":"versions.js","names":["gteSdkVersion","exp","sdkVersion","semver","gte","Error","lteSdkVersion","lte"],"sources":["../../src/utils/versions.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\nimport semver from 'semver';\n\nexport function gteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver.gte(exp.sdkVersion, sdkVersion);\n  } catch {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n\nexport function lteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return false;\n  }\n\n  try {\n    return semver.lte(exp.sdkVersion, sdkVersion);\n  } catch {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n"],"mappings":";;;;;;;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEO,SAASA,aAAT,CAAuBC,GAAvB,EAA4DC,UAA5D,EAAyF;EAC9F,IAAI,CAACD,GAAG,CAACC,UAAT,EAAqB;IACnB,OAAO,KAAP;EACD;;EAED,IAAID,GAAG,CAACC,UAAJ,KAAmB,aAAvB,EAAsC;IACpC,OAAO,IAAP;EACD;;EAED,IAAI;IACF,OAAOC,iBAAA,CAAOC,GAAP,CAAWH,GAAG,CAACC,UAAf,EAA2BA,UAA3B,CAAP;EACD,CAFD,CAEE,MAAM;IACN,MAAM,IAAIG,KAAJ,CAAW,GAAEJ,GAAG,CAACC,UAAW,uDAA5B,CAAN;EACD;AACF;;AAEM,SAASI,aAAT,CAAuBL,GAAvB,EAA4DC,UAA5D,EAAyF;EAC9F,IAAI,CAACD,GAAG,CAACC,UAAT,EAAqB;IACnB,OAAO,KAAP;EACD;;EAED,IAAID,GAAG,CAACC,UAAJ,KAAmB,aAAvB,EAAsC;IACpC,OAAO,KAAP;EACD;;EAED,IAAI;IACF,OAAOC,iBAAA,CAAOI,GAAP,CAAWN,GAAG,CAACC,UAAf,EAA2BA,UAA3B,CAAP;EACD,CAFD,CAEE,MAAM;IACN,MAAM,IAAIG,KAAJ,CAAW,GAAEJ,GAAG,CAACC,UAAW,uDAA5B,CAAN;EACD;AACF"}