{"version":3,"file":"Strings.js","names":["getProjectStringsXMLPathAsync","projectRoot","kind","getResourceXMLPathAsync","name","setStringItem","itemToAdd","stringFileContentsJSON","resources","string","newItem","stringNameExists","findIndex","e","$","concat","removeStringItem","named","splice"],"sources":["../../src/android/Strings.ts"],"sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport { ResourceItemXML, ResourceKind, ResourceXML } from './Resources';\n\nexport async function getProjectStringsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'strings' });\n}\n\nexport function setStringItem(\n  itemToAdd: ResourceItemXML[],\n  stringFileContentsJSON: ResourceXML\n): ResourceXML {\n  if (!stringFileContentsJSON?.resources?.string) {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      // file was empty and JSON is `{resources : ''}`\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n    return stringFileContentsJSON;\n  }\n\n  for (const newItem of itemToAdd) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === newItem.$.name\n    );\n    if (stringNameExists > -1) {\n      // replace the previous item\n      stringFileContentsJSON.resources.string[stringNameExists] = newItem;\n    } else {\n      stringFileContentsJSON.resources.string =\n        stringFileContentsJSON.resources.string.concat(newItem);\n    }\n  }\n  return stringFileContentsJSON;\n}\n\nexport function removeStringItem(named: string, stringFileContentsJSON: ResourceXML): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === named\n    );\n    if (stringNameExists > -1) {\n      // replace the previous value\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}\n"],"mappings":";;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAGO,eAAeA,6BAAf,CACLC,WADK,EAEL;EAAEC;AAAF,IAAoC,EAF/B,EAGY;EACjB,OAAO,IAAAC,gCAAA,EAAwBF,WAAxB,EAAqC;IAAEC,IAAF;IAAQE,IAAI,EAAE;EAAd,CAArC,CAAP;AACD;;AAEM,SAASC,aAAT,CACLC,SADK,EAELC,sBAFK,EAGQ;EAAA;;EACb,IAAI,EAACA,sBAAD,aAACA,sBAAD,wCAACA,sBAAsB,CAAEC,SAAzB,kDAAC,sBAAmCC,MAApC,CAAJ,EAAgD;IAC9C,IAAI,CAACF,sBAAsB,CAACC,SAAxB,IAAqC,OAAOD,sBAAsB,CAACC,SAA9B,KAA4C,QAArF,EAA+F;MAC7F;MACAD,sBAAsB,CAACC,SAAvB,GAAmC,EAAnC;IACD;;IACDD,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,GAA0CH,SAA1C;IACA,OAAOC,sBAAP;EACD;;EAED,KAAK,MAAMG,OAAX,IAAsBJ,SAAtB,EAAiC;IAC/B,MAAMK,gBAAgB,GAAGJ,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCG,SAAxC,CACtBC,CAAD,IAAwBA,CAAC,CAACC,CAAF,CAAIV,IAAJ,KAAaM,OAAO,CAACI,CAAR,CAAUV,IADxB,CAAzB;;IAGA,IAAIO,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;MACzB;MACAJ,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCE,gBAAxC,IAA4DD,OAA5D;IACD,CAHD,MAGO;MACLH,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,GACEF,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCM,MAAxC,CAA+CL,OAA/C,CADF;IAED;EACF;;EACD,OAAOH,sBAAP;AACD;;AAEM,SAASS,gBAAT,CAA0BC,KAA1B,EAAyCV,sBAAzC,EAA2F;EAAA;;EAChG,IAAIA,sBAAJ,aAAIA,sBAAJ,yCAAIA,sBAAsB,CAAEC,SAA5B,mDAAI,uBAAmCC,MAAvC,EAA+C;IAC7C,MAAME,gBAAgB,GAAGJ,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCG,SAAxC,CACtBC,CAAD,IAAwBA,CAAC,CAACC,CAAF,CAAIV,IAAJ,KAAaa,KADd,CAAzB;;IAGA,IAAIN,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;MACzB;MACAJ,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCS,MAAxC,CAA+CP,gBAA/C,EAAiE,CAAjE;IACD;EACF;;EACD,OAAOJ,sBAAP;AACD"}