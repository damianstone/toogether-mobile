{"version":3,"file":"IntentFilters.js","names":["GENERATED_TAG","withAndroidIntentFilters","createAndroidManifestPlugin","setAndroidIntentFilters","getIntentFilters","config","android","intentFilters","androidManifest","mainActivity","getMainActivityOrThrow","length","filter","value","$","concat","renderIntentFilters","map","intentFilter","autoVerify","undefined","action","data","renderIntentFilterData","category","renderIntentFilterCategory","Array","isArray","Boolean","datum","Object","entries","reduce","prev","key","cat"],"sources":["../../src/android/IntentFilters.ts"],"sourcesContent":["import { Android, AndroidIntentFiltersData, ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow, ManifestIntentFilter } from './Manifest';\n\ntype AndroidIntentFilters = NonNullable<Android['intentFilters']>;\n\nconst GENERATED_TAG = 'data-generated';\n\nexport const withAndroidIntentFilters = createAndroidManifestPlugin(\n  setAndroidIntentFilters,\n  'withAndroidIntentFilters'\n);\n\nexport function getIntentFilters(config: Pick<ExpoConfig, 'android'>): AndroidIntentFilters {\n  return config.android?.intentFilters ?? [];\n}\n\nexport function setAndroidIntentFilters(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n): AndroidManifest {\n  // Always ensure old tags are removed.\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n  // Remove all generated tags from previous runs...\n  if (mainActivity['intent-filter']?.length) {\n    mainActivity['intent-filter'] = mainActivity['intent-filter'].filter(\n      (value) => value.$?.[GENERATED_TAG] !== 'true'\n    );\n  }\n\n  const intentFilters = getIntentFilters(config);\n  if (!intentFilters.length) {\n    return androidManifest;\n  }\n\n  mainActivity['intent-filter'] = mainActivity['intent-filter']?.concat(\n    renderIntentFilters(intentFilters)\n  );\n\n  return androidManifest;\n}\n\nexport default function renderIntentFilters(\n  intentFilters: AndroidIntentFilters\n): ManifestIntentFilter[] {\n  return intentFilters.map((intentFilter) => {\n    // <intent-filter>\n    return {\n      $: {\n        'android:autoVerify': intentFilter.autoVerify ? 'true' : undefined,\n        // Add a custom \"generated\" tag that we can query later to remove.\n        [GENERATED_TAG]: 'true',\n      },\n      action: [\n        // <action android:name=\"android.intent.action.VIEW\"/>\n        {\n          $: {\n            'android:name': `android.intent.action.${intentFilter.action}`,\n          },\n        },\n      ],\n      data: renderIntentFilterData(intentFilter.data),\n      category: renderIntentFilterCategory(intentFilter.category),\n    };\n  });\n}\n\n/** Like `<data android:scheme=\"exp\"/>` */\nfunction renderIntentFilterData(data?: AndroidIntentFiltersData | AndroidIntentFiltersData[]) {\n  return (Array.isArray(data) ? data : [data]).filter(Boolean).map((datum) => ({\n    $: Object.entries(datum ?? {}).reduce(\n      (prev, [key, value]) => ({ ...prev, [`android:${key}`]: value }),\n      {}\n    ),\n  }));\n}\n\n/** Like `<category android:name=\"android.intent.category.DEFAULT\"/>` */\nfunction renderIntentFilterCategory(category?: string | string[]) {\n  return (Array.isArray(category) ? category : [category]).filter(Boolean).map((cat) => ({\n    $: {\n      'android:name': `android.intent.category.${cat}`,\n    },\n  }));\n}\n"],"mappings":"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"}