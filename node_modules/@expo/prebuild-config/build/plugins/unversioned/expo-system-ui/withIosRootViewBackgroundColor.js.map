{"version":3,"sources":["../../../../src/plugins/unversioned/expo-system-ui/withIosRootViewBackgroundColor.ts"],"names":["BACKGROUND_COLOR_KEY","debug","require","withIosRootViewBackgroundColor","config","shouldUseLegacyBehavior","modResults","setRootViewBackgroundColor","warnSystemUIMissing","sdkVersion","semver","lt","backgroundColor","getRootViewBackgroundColor","WarningAggregator","addWarningIOS","infoPlist","color","Error","ios"],"mappings":";;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAFA;AAIA;AACA,MAAMA,oBAAoB,GAAG,4BAA7B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,2BAAjB,CAAd;;AAEO,MAAMC,8BAA4C,GAAGC,MAAM,IAAI;AACpEA,EAAAA,MAAM,GAAG,oCAAcA,MAAd,EAAsBA,MAAM,IAAI;AACvC,QAAIC,uBAAuB,CAACD,MAAD,CAA3B,EAAqC;AACnCA,MAAAA,MAAM,CAACE,UAAP,GAAoBC,0BAA0B,CAACH,MAAD,EAASA,MAAM,CAACE,UAAhB,CAA9C;AACD,KAFD,MAEO;AACLE,MAAAA,mBAAmB,CAACJ,MAAD,CAAnB;AACD;;AACD,WAAOA,MAAP;AACD,GAPQ,CAAT;AAQA,SAAOA,MAAP;AACD,CAVM;AAYP;;;;;AACO,SAASC,uBAAT,CAAiCD,MAAjC,EAAkF;AACvF,MAAI;AACF,WAAO,CAAC,EAAEA,MAAM,CAACK,UAAP,IAAqBC,kBAAOC,EAAP,CAAUP,MAAM,CAACK,UAAjB,EAA6B,QAA7B,CAAvB,CAAR;AACD,GAFD,CAEE,MAAM,CAAE;;AACV,SAAO,KAAP;AACD;;AAEM,SAASD,mBAAT,CACLJ,MADK,EAEL;AACA,QAAMQ,eAAe,GAAGC,0BAA0B,CAACT,MAAD,CAAlD;;AAEA,MAAIQ,eAAJ,EAAqB;AACnB;AACAE,uCAAkBC,aAAlB,CACE,qBADF,EAEE,+CAFF,EAGE,2FAHF;AAKD;AACF;;AAEM,SAASR,0BAAT,CACLH,MADK,EAELY,SAFK,EAGM;AACX,QAAMJ,eAAe,GAAGC,0BAA0B,CAACT,MAAD,CAAlD;;AACA,MAAI,CAACQ,eAAL,EAAsB;AACpB,WAAOI,SAAS,CAAChB,oBAAD,CAAhB;AACD,GAFD,MAEO;AACL,QAAIiB,KAAK,GAAG,+BAAeL,eAAf,CAAZ;;AACA,QAAI,CAACK,KAAL,EAAY;AACV,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACD;;AACDD,IAAAA,KAAK,GAAG,CAAEA,KAAK,IAAI,EAAV,GAAiBA,KAAK,KAAK,CAA5B,MAAoC,CAA5C;AACAD,IAAAA,SAAS,CAAChB,oBAAD,CAAT,GAAkCiB,KAAlC;AAEAhB,IAAAA,KAAK,CAAE,kBAAiBW,eAAgB,OAAMK,KAAM,EAA/C,CAAL;AACD;;AACD,SAAOD,SAAP;AACD;;AAEM,SAASH,0BAAT,CAAoCT,MAApC,EAAyF;AAAA;;AAC9F,SAAO,gBAAAA,MAAM,CAACe,GAAP,4DAAYP,eAAZ,KAA+BR,MAAM,CAACQ,eAAtC,IAAyD,IAAhE;AACD","sourcesContent":["import { ConfigPlugin, InfoPlist, WarningAggregator, withInfoPlist } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n// @ts-ignore: uses flow\nimport normalizeColor from '@react-native/normalize-color';\nimport semver from 'semver';\n\n// Maps to the template AppDelegate.m\nconst BACKGROUND_COLOR_KEY = 'RCTRootViewBackgroundColor';\n\nconst debug = require('debug')('expo:system-ui:plugin:ios');\n\nexport const withIosRootViewBackgroundColor: ConfigPlugin = config => {\n  config = withInfoPlist(config, config => {\n    if (shouldUseLegacyBehavior(config)) {\n      config.modResults = setRootViewBackgroundColor(config, config.modResults);\n    } else {\n      warnSystemUIMissing(config);\n    }\n    return config;\n  });\n  return config;\n};\n\n/** The template was changed in SDK 43 to move the background color logic to the `expo-system-ui` module */\nexport function shouldUseLegacyBehavior(config: Pick<ExpoConfig, 'sdkVersion'>): boolean {\n  try {\n    return !!(config.sdkVersion && semver.lt(config.sdkVersion, '44.0.0'));\n  } catch {}\n  return false;\n}\n\nexport function warnSystemUIMissing(\n  config: Pick<ExpoConfig, 'sdkVersion' | 'backgroundColor' | 'ios'>\n) {\n  const backgroundColor = getRootViewBackgroundColor(config);\n\n  if (backgroundColor) {\n    // Background color needs to be set programmatically\n    WarningAggregator.addWarningIOS(\n      'ios.backgroundColor',\n      'Install expo-system-ui to enable this feature',\n      'https://docs.expo.dev/build-reference/migrating/#expo-config--backgroundcolor--depends-on'\n    );\n  }\n}\n\nexport function setRootViewBackgroundColor(\n  config: Pick<ExpoConfig, 'backgroundColor' | 'ios'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const backgroundColor = getRootViewBackgroundColor(config);\n  if (!backgroundColor) {\n    delete infoPlist[BACKGROUND_COLOR_KEY];\n  } else {\n    let color = normalizeColor(backgroundColor);\n    if (!color) {\n      throw new Error('Invalid background color on iOS');\n    }\n    color = ((color << 24) | (color >>> 8)) >>> 0;\n    infoPlist[BACKGROUND_COLOR_KEY] = color;\n\n    debug(`Convert color: ${backgroundColor} -> ${color}`);\n  }\n  return infoPlist;\n}\n\nexport function getRootViewBackgroundColor(config: Pick<ExpoConfig, 'ios' | 'backgroundColor'>) {\n  return config.ios?.backgroundColor || config.backgroundColor || null;\n}\n"],"file":"withIosRootViewBackgroundColor.js"}