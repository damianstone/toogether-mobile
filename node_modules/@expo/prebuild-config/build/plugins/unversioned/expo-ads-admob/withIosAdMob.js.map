{"version":3,"sources":["../../../../src/plugins/unversioned/expo-ads-admob/withIosAdMob.ts"],"names":["withIosAdMob","config","modResults","setAdMobConfig","getGoogleMobileAdsAppId","ios","googleMobileAdsAppId","setGoogleMobileAdsAppId","GADApplicationIdentifier","infoPlist","appId"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,YAA0B,GAAGC,MAAM,IAAI;AAClD,SAAO,oCAAcA,MAAd,EAAsBA,MAAM,IAAI;AACrCA,IAAAA,MAAM,CAACC,UAAP,GAAoBC,cAAc,CAACF,MAAD,EAASA,MAAM,CAACC,UAAhB,CAAlC;AACA,WAAOD,MAAP;AACD,GAHM,CAAP;AAID,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,SAASG,uBAAT,CAAiCH,MAAjC,EAAkE;AAAA;;AACvE,iDAAOA,MAAM,CAACI,GAAd,sEAAO,YAAYJ,MAAnB,uDAAO,mBAAoBK,oBAA3B,yEAAmD,IAAnD;AACD;;AAEM,SAASC,uBAAT,CACLN,MADK,EAEL;AAAEO,EAAAA,wBAAF;AAA4B,KAAGC;AAA/B,CAFK,EAGM;AACX,QAAMC,KAAK,GAAGN,uBAAuB,CAACH,MAAD,CAArC;;AAEA,MAAIS,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAOD,SAAP;AACD;;AAED,SAAO,EACL,GAAGA,SADE;AAELD,IAAAA,wBAAwB,EAAEE;AAFrB,GAAP;AAID;;AAED,SAASP,cAAT,CAAwBF,MAAxB,EAAyDQ,SAAzD,EAA0F;AACxFA,EAAAA,SAAS,GAAGF,uBAAuB,CAACN,MAAD,EAASQ,SAAT,CAAnC;AACA,SAAOA,SAAP;AACD","sourcesContent":["import { ConfigPlugin, InfoPlist, withInfoPlist } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nexport const withIosAdMob: ConfigPlugin = config => {\n  return withInfoPlist(config, config => {\n    config.modResults = setAdMobConfig(config, config.modResults);\n    return config;\n  });\n};\n\n// NOTE(brentvatne): if the developer has installed the google ads sdk and does\n// not provide an app id their app will crash. Standalone apps get around this by\n// providing some default value, we will instead here assume that the user can\n// do the right thing if they have installed the package. This is a slight discrepancy\n// that arises in ejecting because it's possible for the package to be installed and\n// not crashing in the managed workflow, then you eject and the app crashes because\n// you don't have an id to fall back to.\nexport function getGoogleMobileAdsAppId(config: Pick<ExpoConfig, 'ios'>) {\n  return config.ios?.config?.googleMobileAdsAppId ?? null;\n}\n\nexport function setGoogleMobileAdsAppId(\n  config: Pick<ExpoConfig, 'ios'>,\n  { GADApplicationIdentifier, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const appId = getGoogleMobileAdsAppId(config);\n\n  if (appId === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    GADApplicationIdentifier: appId,\n  };\n}\n\nfunction setAdMobConfig(config: Pick<ExpoConfig, 'ios'>, infoPlist: InfoPlist): InfoPlist {\n  infoPlist = setGoogleMobileAdsAppId(config, infoPlist);\n  return infoPlist;\n}\n"],"file":"withIosAdMob.js"}