{"version":3,"sources":["../../../../src/plugins/unversioned/expo-facebook/withIosFacebook.ts"],"names":["appendScheme","IOSConfig","Scheme","fbSchemes","withIosFacebook","config","modResults","setFacebookConfig","getFacebookScheme","facebookScheme","getFacebookAppId","facebookAppId","getFacebookDisplayName","facebookDisplayName","getFacebookAutoInitEnabled","facebookAutoInitEnabled","getFacebookAutoLogAppEvents","facebookAutoLogAppEventsEnabled","getFacebookAdvertiserIDCollection","facebookAdvertiserIDCollectionEnabled","infoPlist","setFacebookAppId","setFacebookApplicationQuerySchemes","setFacebookDisplayName","setFacebookAutoInitEnabled","setFacebookAutoLogAppEventsEnabled","setFacebookAdvertiserIDCollectionEnabled","setFacebookScheme","FacebookAutoInitEnabled","FacebookAutoLogAppEventsEnabled","FacebookAdvertiserIDCollectionEnabled","FacebookAppID","FacebookDisplayName","existingSchemes","LSApplicationQueriesSchemes","includes","length","restInfoPlist","scheme","index","findIndex","s","splice","updatedSchemes"],"mappings":"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","sourcesContent":["import { ConfigPlugin, InfoPlist, IOSConfig, withInfoPlist } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nconst { appendScheme } = IOSConfig.Scheme;\n\ntype ExpoConfigFacebook = Pick<\n  ExpoConfig,\n  | 'facebookScheme'\n  | 'facebookAdvertiserIDCollectionEnabled'\n  | 'facebookAppId'\n  | 'facebookAutoInitEnabled'\n  | 'facebookAutoLogAppEventsEnabled'\n  | 'facebookDisplayName'\n>;\n\nconst fbSchemes = ['fbapi', 'fb-messenger-api', 'fbauth2', 'fbshareextension'];\n\nexport const withIosFacebook: ConfigPlugin = config => {\n  return withInfoPlist(config, config => {\n    config.modResults = setFacebookConfig(config, config.modResults);\n    return config;\n  });\n};\n\n/**\n * Getters\n * TODO: these getters are the same between ios/android, we could reuse them\n */\n\nexport function getFacebookScheme(config: ExpoConfigFacebook) {\n  return config.facebookScheme ?? null;\n}\n\nexport function getFacebookAppId(config: Pick<ExpoConfigFacebook, 'facebookAppId'>) {\n  return config.facebookAppId ?? null;\n}\n\nexport function getFacebookDisplayName(config: ExpoConfigFacebook) {\n  return config.facebookDisplayName ?? null;\n}\n\nexport function getFacebookAutoInitEnabled(config: ExpoConfigFacebook) {\n  return config.facebookAutoInitEnabled ?? null;\n}\n\nexport function getFacebookAutoLogAppEvents(config: ExpoConfigFacebook) {\n  return config.facebookAutoLogAppEventsEnabled ?? null;\n}\n\nexport function getFacebookAdvertiserIDCollection(config: ExpoConfigFacebook) {\n  return config.facebookAdvertiserIDCollectionEnabled ?? null;\n}\n\n/**\n * Setters\n */\n\nexport function setFacebookConfig(config: ExpoConfigFacebook, infoPlist: InfoPlist) {\n  infoPlist = setFacebookAppId(config, infoPlist);\n  infoPlist = setFacebookApplicationQuerySchemes(config, infoPlist);\n  infoPlist = setFacebookDisplayName(config, infoPlist);\n  infoPlist = setFacebookAutoInitEnabled(config, infoPlist);\n  infoPlist = setFacebookAutoLogAppEventsEnabled(config, infoPlist);\n  infoPlist = setFacebookAdvertiserIDCollectionEnabled(config, infoPlist);\n  infoPlist = setFacebookScheme(config, infoPlist);\n  return infoPlist;\n}\n\nexport function setFacebookScheme(config: ExpoConfigFacebook, infoPlist: InfoPlist) {\n  const facebookScheme = getFacebookScheme(config);\n  return appendScheme(facebookScheme, infoPlist);\n}\n\nexport function setFacebookAutoInitEnabled(\n  config: ExpoConfigFacebook,\n  { FacebookAutoInitEnabled, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const facebookAutoInitEnabled = getFacebookAutoInitEnabled(config);\n\n  if (facebookAutoInitEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAutoInitEnabled: facebookAutoInitEnabled,\n  };\n}\n\nexport function setFacebookAutoLogAppEventsEnabled(\n  config: ExpoConfigFacebook,\n  { FacebookAutoLogAppEventsEnabled, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const facebookAutoLogAppEventsEnabled = getFacebookAutoLogAppEvents(config);\n\n  if (facebookAutoLogAppEventsEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAutoLogAppEventsEnabled: facebookAutoLogAppEventsEnabled,\n  };\n}\n\nexport function setFacebookAdvertiserIDCollectionEnabled(\n  config: ExpoConfigFacebook,\n  { FacebookAdvertiserIDCollectionEnabled, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const facebookAdvertiserIDCollectionEnabled = getFacebookAdvertiserIDCollection(config);\n\n  if (facebookAdvertiserIDCollectionEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAdvertiserIDCollectionEnabled: facebookAdvertiserIDCollectionEnabled,\n  };\n}\n\nexport function setFacebookAppId(\n  config: Pick<ExpoConfigFacebook, 'facebookAppId'>,\n  { FacebookAppID, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const facebookAppId = getFacebookAppId(config);\n  if (facebookAppId) {\n    return {\n      ...infoPlist,\n      FacebookAppID: facebookAppId,\n    };\n  }\n\n  return infoPlist;\n}\n\nexport function setFacebookDisplayName(\n  config: ExpoConfigFacebook,\n  { FacebookDisplayName, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const facebookDisplayName = getFacebookDisplayName(config);\n\n  if (facebookDisplayName) {\n    return {\n      ...infoPlist,\n      FacebookDisplayName: facebookDisplayName,\n    };\n  }\n\n  return infoPlist;\n}\n\nexport function setFacebookApplicationQuerySchemes(\n  config: Pick<ExpoConfigFacebook, 'facebookAppId'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const facebookAppId = getFacebookAppId(config);\n\n  const existingSchemes = infoPlist.LSApplicationQueriesSchemes || [];\n\n  if (facebookAppId && existingSchemes.includes('fbapi')) {\n    // already included, no need to add again\n    return infoPlist;\n  } else if (!facebookAppId && !existingSchemes.length) {\n    // already removed, no need to strip again\n    const { LSApplicationQueriesSchemes, ...restInfoPlist } = infoPlist;\n    if (LSApplicationQueriesSchemes?.length) {\n      return infoPlist;\n    } else {\n      // Return without the empty LSApplicationQueriesSchemes array.\n      return restInfoPlist;\n    }\n  }\n\n  // Remove all schemes\n  for (const scheme of fbSchemes) {\n    const index = existingSchemes.findIndex(s => s === scheme);\n    if (index > -1) {\n      existingSchemes.splice(index, 1);\n    }\n  }\n\n  if (!facebookAppId) {\n    // Run again to ensure the LSApplicationQueriesSchemes array is stripped if needed.\n    infoPlist.LSApplicationQueriesSchemes = existingSchemes;\n    if (!infoPlist.LSApplicationQueriesSchemes.length) {\n      delete infoPlist.LSApplicationQueriesSchemes;\n    }\n    return infoPlist;\n  }\n\n  // TODO: it's actually necessary to add more query schemes (specific to the\n  // app) to support all of the features that the Facebook SDK provides, should\n  // we sync those here too?\n  const updatedSchemes = [...existingSchemes, ...fbSchemes];\n\n  return {\n    ...infoPlist,\n    LSApplicationQueriesSchemes: updatedSchemes,\n  };\n}\n"],"file":"withIosFacebook.js"}