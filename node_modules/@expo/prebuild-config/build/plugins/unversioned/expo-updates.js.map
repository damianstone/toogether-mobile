{"version":3,"file":"expo-updates.js","names":["packageName","withExpoUpdates","config","props","withStaticPlugin","_isLegacyPlugin","plugin","fallback","createRunOncePlugin","withUnversionedUpdates","AndroidConfig","Updates","withUpdates","IOSConfig"],"sources":["../../../src/plugins/unversioned/expo-updates.ts"],"sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  createRunOncePlugin,\n  IOSConfig,\n  withStaticPlugin,\n} from '@expo/config-plugins';\n\n// Local unversioned updates plugin\n\nconst packageName = 'expo-updates';\n\nexport const withExpoUpdates: ConfigPlugin<{ expoUsername: string }> = (config, props) => {\n  return withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    // Pass props to the static plugin if it exists.\n    plugin: [packageName, props],\n    // If the static plugin isn't found, use the unversioned one.\n    fallback: createRunOncePlugin((config) => withUnversionedUpdates(config, props), packageName),\n  });\n};\n\nconst withUnversionedUpdates: ConfigPlugin<{ expoUsername: string }> = (config, props) => {\n  config = AndroidConfig.Updates.withUpdates(config, props);\n  config = IOSConfig.Updates.withUpdates(config, props);\n  return config;\n};\n\nexport default withExpoUpdates;\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAQA;AAEA,MAAMA,WAAW,GAAG,cAApB;;AAEO,MAAMC,eAAuD,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;EACxF,OAAO,IAAAC,iCAAA,EAAiBF,MAAjB,EAAyB;IAC9BG,eAAe,EAAE,IADa;IAE9B;IACAC,MAAM,EAAE,CAACN,WAAD,EAAcG,KAAd,CAHsB;IAI9B;IACAI,QAAQ,EAAE,IAAAC,oCAAA,EAAqBN,MAAD,IAAYO,sBAAsB,CAACP,MAAD,EAASC,KAAT,CAAtD,EAAuEH,WAAvE;EALoB,CAAzB,CAAP;AAOD,CARM;;;;AAUP,MAAMS,sBAA8D,GAAG,CAACP,MAAD,EAASC,KAAT,KAAmB;EACxFD,MAAM,GAAGQ,8BAAA,CAAcC,OAAd,CAAsBC,WAAtB,CAAkCV,MAAlC,EAA0CC,KAA1C,CAAT;EACAD,MAAM,GAAGW,0BAAA,CAAUF,OAAV,CAAkBC,WAAlB,CAA8BV,MAA9B,EAAsCC,KAAtC,CAAT;EACA,OAAOD,MAAP;AACD,CAJD;;eAMeD,e"}