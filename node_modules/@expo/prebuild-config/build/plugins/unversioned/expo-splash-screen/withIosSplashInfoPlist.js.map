{"version":3,"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashInfoPlist.ts"],"names":["debug","withIosSplashInfoPlist","config","splash","modResults","setSplashInfoPlist","infoPlist","isDarkModeEnabled","dark","image","tabletImage","backgroundColor","tabletBackgroundColor","existing","ios","userInterfaceStyle","WarningAggregator","addWarningIOS","UIUserInterfaceStyle","UILaunchStoryboardName"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAIA,MAAMA,KAAK,GAAG,sBAAM,uDAAN,CAAd;;AAEO,MAAMC,sBAAqD,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACvF,SAAO,oCAAcD,MAAd,EAAsBA,MAAM,IAAI;AACrCA,IAAAA,MAAM,CAACE,UAAP,GAAoBC,kBAAkB,CAACH,MAAD,EAASA,MAAM,CAACE,UAAhB,EAA4BD,MAA5B,CAAtC;AACA,WAAOD,MAAP;AACD,GAHM,CAAP;AAID,CALM;;;;AAOA,SAASG,kBAAT,CACLH,MADK,EAELI,SAFK,EAGLH,MAHK,EAIM;AAAA;;AACX,QAAMI,iBAAiB,GAAG,CAAC,EACzBJ,MAAM,SAAN,IAAAA,MAAM,WAAN,oBAAAA,MAAM,CAAEK,IAAR,sDAAcC,KAAd,IACAN,MADA,aACAA,MADA,gCACAA,MAAM,CAAEK,IADR,0CACA,cAAcE,WADd,IAEAP,MAFA,aAEAA,MAFA,gCAEAA,MAAM,CAAEK,IAFR,0CAEA,cAAcG,eAFd,IAGAR,MAHA,aAGAA,MAHA,gCAGAA,MAAM,CAAEK,IAHR,0CAGA,cAAcI,qBAJW,CAA3B;AAMAZ,EAAAA,KAAK,CAAE,qBAAF,EAAwBO,iBAAxB,CAAL;;AAEA,MAAIA,iBAAJ,EAAuB;AAAA;;AACrB;AACA;AACA,UAAMM,QAAQ,2CAAGX,MAAM,CAACY,GAAV,gDAAG,YAAYC,kBAAf,yEAAqCb,MAAM,CAACa,kBAA1D,CAHqB,CAIrB;;AACA,QAAIF,QAAQ,IAAIA,QAAQ,KAAK,WAA7B,EAA0C;AACxCG,yCAAkBC,aAAlB,CACE,oBADF,EAEE,qJAFF;AAID,KAVoB,CAWrB;;;AACAX,IAAAA,SAAS,CAACY,oBAAV,GAAiC,WAAjC;AACD,GAbD,MAaO,CACL;AACA;AACA;AACD;;AAED,MAAIf,MAAJ,EAAY;AACV;AACAG,IAAAA,SAAS,CAACa,sBAAV,GAAmC,cAAnC;AACD,GAHD,MAGO;AACLnB,IAAAA,KAAK,CAAE,kCAAF,CAAL;AACA,WAAOM,SAAS,CAACa,sBAAjB;AACD;;AAED,SAAOb,SAAP;AACD","sourcesContent":["import { ConfigPlugin, InfoPlist, WarningAggregator, withInfoPlist } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\nimport Debug from 'debug';\n\nimport { IOSSplashConfig } from './getIosSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios:infoPlist');\n\nexport const withIosSplashInfoPlist: ConfigPlugin<IOSSplashConfig> = (config, splash) => {\n  return withInfoPlist(config, config => {\n    config.modResults = setSplashInfoPlist(config, config.modResults, splash);\n    return config;\n  });\n};\n\nexport function setSplashInfoPlist(\n  config: ExpoConfig,\n  infoPlist: InfoPlist,\n  splash: IOSSplashConfig\n): InfoPlist {\n  const isDarkModeEnabled = !!(\n    splash?.dark?.image ||\n    splash?.dark?.tabletImage ||\n    splash?.dark?.backgroundColor ||\n    splash?.dark?.tabletBackgroundColor\n  );\n  debug(`isDarkModeEnabled: `, isDarkModeEnabled);\n\n  if (isDarkModeEnabled) {\n    // IOSConfig.UserInterfaceStyle.getUserInterfaceStyle(config);\n    // Determine if the user manually defined the userInterfaceStyle incorrectly\n    const existing = config.ios?.userInterfaceStyle ?? config.userInterfaceStyle;\n    // Add a warning to prevent the dark mode splash screen from not being shown -- this was learned the hard way.\n    if (existing && existing !== 'automatic') {\n      WarningAggregator.addWarningIOS(\n        'userInterfaceStyle',\n        'The existing `userInterfaceStyle` property is preventing splash screen from working properly. Please remove it or disable dark mode splash screens.'\n      );\n    }\n    // assigning it to auto anyways, but this is fragile because the order of operations matter now\n    infoPlist.UIUserInterfaceStyle = 'Automatic';\n  } else {\n    // NOTE(brentvatne): Commented out this line because it causes https://github.com/expo/expo-cli/issues/3935\n    // We should revisit this approach.\n    // delete infoPlist.UIUserInterfaceStyle;\n  }\n\n  if (splash) {\n    // TODO: What to do here ??\n    infoPlist.UILaunchStoryboardName = 'SplashScreen';\n  } else {\n    debug(`Disabling UILaunchStoryboardName`);\n    delete infoPlist.UILaunchStoryboardName;\n  }\n\n  return infoPlist;\n}\n"],"file":"withIosSplashInfoPlist.js"}