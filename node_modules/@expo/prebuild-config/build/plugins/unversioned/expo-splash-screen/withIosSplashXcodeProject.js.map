{"version":3,"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashXcodeProject.ts"],"names":["debug","STORYBOARD_FILE_PATH","withIosSplashXcodeProject","config","splash","projectPath","IOSConfig","Paths","getSourceRoot","modRequest","projectRoot","modResults","setSplashStoryboardAsync","projectName","project","updatePbxProject","storyboardFilePath","path","join","hasFile","XcodeUtils","addResourceFileToGroup","filepath","groupName","getImageContentMode","resizeMode","Error","getSplashStoryboardContentsAsync","splashScreenImagePresent","Boolean","image","xml","contentMode","imageName","contents","filePath","resolve","fs","ensureDir","writeFile"],"mappings":"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","sourcesContent":["import { ConfigPlugin, IOSConfig, withXcodeProject } from '@expo/config-plugins';\nimport Debug from 'debug';\nimport fs from 'fs-extra';\nimport * as path from 'path';\nimport { XcodeProject } from 'xcode';\n\nimport {\n  applyImageToSplashScreenXML,\n  createTemplateSplashScreenAsync,\n  ImageContentMode,\n  toString,\n} from './InterfaceBuilder';\nimport { IOSSplashConfig } from './getIosSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios:xcodeproj');\n\nconst STORYBOARD_FILE_PATH = './SplashScreen.storyboard';\n\nexport const withIosSplashXcodeProject: ConfigPlugin<IOSSplashConfig> = (config, splash) => {\n  return withXcodeProject(config, async config => {\n    const projectPath = IOSConfig.Paths.getSourceRoot(config.modRequest.projectRoot);\n    config.modResults = await setSplashStoryboardAsync(\n      { projectPath, projectName: config.modRequest.projectName!, project: config.modResults },\n      splash\n    );\n    return config;\n  });\n};\n\n/**\n * Modifies `.pbxproj` by:\n * - adding reference for `.storyboard` file\n */\nfunction updatePbxProject({\n  projectName,\n  project,\n}: {\n  projectName: string;\n  project: XcodeProject;\n}): void {\n  // Check if `${projectName}/SplashScreen.storyboard` already exists\n  // Path relative to `ios` directory\n  const storyboardFilePath = path.join(projectName, STORYBOARD_FILE_PATH);\n  if (!project.hasFile(storyboardFilePath)) {\n    debug(`Adding ${storyboardFilePath} to Xcode project`);\n    IOSConfig.XcodeUtils.addResourceFileToGroup({\n      filepath: storyboardFilePath,\n      groupName: projectName,\n      project,\n    });\n  }\n}\n\nfunction getImageContentMode(resizeMode: string): ImageContentMode {\n  switch (resizeMode) {\n    case 'contain':\n      return 'scaleAspectFit';\n    case 'cover':\n      return 'scaleAspectFill';\n    default:\n      throw new Error(`{ resizeMode: \"${resizeMode}\" } is not supported for iOS platform.`);\n  }\n}\n\n/**\n * Creates [STORYBOARD] file containing ui description of Splash/Launch Screen.\n */\nexport async function getSplashStoryboardContentsAsync(\n  config?: Partial<Pick<IOSSplashConfig, 'image' | 'resizeMode'>>\n): Promise<string> {\n  const resizeMode = config?.resizeMode;\n  const splashScreenImagePresent = Boolean(config?.image);\n\n  let xml = await createTemplateSplashScreenAsync();\n\n  // Only get the resize mode when the image is present.\n  if (splashScreenImagePresent) {\n    const contentMode = getImageContentMode(resizeMode || 'contain');\n    xml = applyImageToSplashScreenXML(xml, {\n      contentMode,\n      imageName: 'SplashScreen',\n    });\n  }\n\n  return toString(xml);\n}\n\nexport async function setSplashStoryboardAsync(\n  {\n    projectPath,\n    projectName,\n    project,\n  }: { projectPath: string; projectName: string; project: XcodeProject },\n  config?: Partial<Pick<IOSSplashConfig, 'image' | 'resizeMode'>>\n): Promise<XcodeProject> {\n  const contents = await getSplashStoryboardContentsAsync(config);\n\n  const filePath = path.resolve(projectPath, STORYBOARD_FILE_PATH);\n  await fs.ensureDir(projectPath);\n  await fs.writeFile(filePath, contents);\n\n  await updatePbxProject({ projectName, project });\n  return project;\n}\n"],"file":"withIosSplashXcodeProject.js"}