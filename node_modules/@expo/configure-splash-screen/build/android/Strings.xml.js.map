{"version":3,"file":"Strings.xml.js","sourceRoot":"","sources":["../../src/android/Strings.xml.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAGxB,4CAA4F;AAC5F,0DAAkF;AAElF,MAAM,qBAAqB,GAAG,0BAA0B,CAAC;AAEzD,MAAM,mBAAmB,GAAG,uCAA2B,CAAC,OAAO,CAAC;AAChE,MAAM,8BAA8B,GAAG,KAAK,CAAC;AAE7C,SAAS,uBAAuB,CAC9B,GAAY,EACZ,EACE,eAAe,EACf,oBAAoB,GAIrB;IAED,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,MAAM,MAAM,GAAG,mCAAgB,CAAC,GAAG,EAAE;QACnC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE;oBACR;wBACE,GAAG,EAAE,GAAG,EAAE;wBACV,OAAO,EAAE,+GAA+G;qBACzH;oBACD;wBACE,YAAY,EAAE,CAAC,eAAe;wBAC9B,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;wBACzC,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,IAAI,EAAE,gCAAgC;4BACtC,YAAY,EAAE,OAAO;yBACtB;wBACD,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,eAAe,aAAf,eAAe,cAAf,eAAe,GAAI,mBAAmB;6BAC7C;yBACF;qBACF;oBACD;wBACE,YAAY,EAAE,CAAC,oBAAoB;wBACnC,GAAG,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;wBAC9C,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,IAAI,EAAE,2CAA2C;4BACjD,YAAY,EAAE,OAAO;yBACtB;wBACD,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,MAAM,CAAC,oBAAoB,aAApB,oBAAoB,cAApB,oBAAoB,GAAI,8BAA8B,CAAC;6BACrE;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;GAEG;AACY,KAAK,UAAU,mBAAmB,CAC/C,eAAuB,EACvB,SAKI,EAAE;;IAEN,MAAM,eAAe,SAAG,MAAM,CAAC,eAAe,mCAAI,uCAA2B,CAAC,OAAO,CAAC;IACtF,MAAM,oBAAoB,eAAY,MAAM,CAAC,SAAS,0CAAE,WAAW,mCAAI,KAAK,CAAC;IAE7E,MAAM,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC;IAEtE,MAAM,UAAU,GAAG,MAAM,8BAAW,CAAC,QAAQ,CAAC,CAAC;IAE/C,MAAM,oBAAoB,GAAG,uBAAuB,CAAC,UAAU,EAAE;QAC/D,eAAe;QACf,oBAAoB;KACrB,CAAC,CAAC;IAEH,MAAM,+BAAY,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;AACrD,CAAC;AAtBD,sCAsBC","sourcesContent":["import path from 'path';\nimport { Element } from 'xml-js';\n\nimport { SplashScreenImageResizeMode, SplashScreenImageResizeModeType } from '../constants';\nimport { readXmlFile, writeXmlFile, mergeXmlElements } from '../xml-manipulation';\n\nconst STRINGS_XML_FILE_PATH = './res/values/strings.xml';\n\nconst DEFAULT_RESIZE_MODE = SplashScreenImageResizeMode.CONTAIN;\nconst DEFAULT_STATUS_BAT_TRANSLUCENT = false;\n\nfunction ensureDesiredXmlContent(\n  xml: Element,\n  {\n    imageResizeMode,\n    statusBarTranslucent,\n  }: {\n    imageResizeMode?: SplashScreenImageResizeModeType;\n    statusBarTranslucent?: boolean;\n  }\n): Element {\n  let idx = 0;\n  const result = mergeXmlElements(xml, {\n    elements: [\n      {\n        name: 'resources',\n        elements: [\n          {\n            idx: idx++,\n            comment: ` Below line is handled by '@expo/configure-splash-screen' command and it's discouraged to modify it manually `,\n          },\n          {\n            deletionFlag: !imageResizeMode,\n            idx: !imageResizeMode ? undefined : idx++,\n            name: 'string',\n            attributes: {\n              name: 'expo_splash_screen_resize_mode',\n              translatable: 'false',\n            },\n            elements: [\n              {\n                text: imageResizeMode ?? DEFAULT_RESIZE_MODE,\n              },\n            ],\n          },\n          {\n            deletionFlag: !statusBarTranslucent,\n            idx: !statusBarTranslucent ? undefined : idx++,\n            name: 'string',\n            attributes: {\n              name: 'expo_splash_screen_status_bar_translucent',\n              translatable: 'false',\n            },\n            elements: [\n              {\n                text: String(statusBarTranslucent ?? DEFAULT_STATUS_BAT_TRANSLUCENT),\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  });\n  return result;\n}\n\n/**\n * @param androidMainPath Path to the main directory containing code and resources in Android project. In general that would be `android/app/src/main`.\n */\nexport default async function configureStringsXml(\n  androidMainPath: string,\n  config: {\n    imageResizeMode?: SplashScreenImageResizeModeType;\n    statusBar?: {\n      translucent?: boolean;\n    };\n  } = {}\n) {\n  const imageResizeMode = config.imageResizeMode ?? SplashScreenImageResizeMode.CONTAIN;\n  const statusBarTranslucent: boolean = config.statusBar?.translucent ?? false;\n\n  const filePath = path.resolve(androidMainPath, STRINGS_XML_FILE_PATH);\n\n  const xmlContent = await readXmlFile(filePath);\n\n  const configuredXmlContent = ensureDesiredXmlContent(xmlContent, {\n    imageResizeMode,\n    statusBarTranslucent,\n  });\n\n  await writeXmlFile(filePath, configuredXmlContent);\n}\n"]}