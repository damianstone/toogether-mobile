{"version":3,"file":"pbxproj.js","sourceRoot":"","sources":["../../src/ios/pbxproj.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA6B;AAC7B,kDAAmE;AAEnE,mCAIiB;AAkBjB,SAAS,gBAAgB,CAAC,WAAmB;IAC3C,OAAO;QACL,WAAW,EAAE,+BAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAE;QACrD,WAAW,EAAE,6BAAqB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAE;KACpD,CAAC;AACJ,CAAC;AAED;;GAEG;AACY,KAAK,UAAU,cAAc,CAAC,eAAuB;IAClE,MAAM,MAAM,GAAG,gBAAgB,CAAC,eAAe,CAAC,CAAC;IAEjD,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;IAE3D,MAAM,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3F,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAE/C,MAAM,UAAU,GAAG,eAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAE9C,MAAM,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE,CAChC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QACrB,IAAI,GAAG,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;SACjE;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CACH,CAAC;IAEF,MAAM,uBAAuB,GAAG,kCAA0B,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;IAEjG,OAAO;QACL,WAAW;QACX,WAAW;QACX,UAAU;QACV,uBAAuB;KACxB,CAAC;AACJ,CAAC;AA3BD,iCA2BC","sourcesContent":["import * as path from 'path';\nimport xcode, { PBXNativeTarget, UUID, XcodeProject } from 'xcode';\n\nimport {\n  getAllPBXProjectPaths,\n  getAllXcodeProjectPaths,\n  getApplicationNativeTarget,\n} from './Paths';\n\nexport interface IosProject {\n  projectName: string;\n  /**\n   * Root path to directory containing project source files.\n   */\n  projectPath: string;\n  /**\n   * pbxProject reference that allows to modify `.pbxproj` file.\n   */\n  pbxProject: XcodeProject;\n  /**\n   * main application PBXNativeTarget from `.pbxproj` file.\n   */\n  applicationNativeTarget: { uuid: UUID; target: PBXNativeTarget };\n}\n\nfunction getProjectConfig(projectRoot: string): { projectPath: string; pbxprojPath: string } {\n  return {\n    projectPath: getAllXcodeProjectPaths(projectRoot)[0]!,\n    pbxprojPath: getAllPBXProjectPaths(projectRoot)[0]!,\n  };\n}\n\n/**\n * Reads iOS project and locates `.pbxproj` file for further parsing and modifications.\n */\nexport default async function readPbxProject(projectRootPath: string): Promise<IosProject> {\n  const config = getProjectConfig(projectRootPath);\n\n  const { projectPath: xcodeProjPath, pbxprojPath } = config;\n\n  const projectPath = xcodeProjPath.substring(0, xcodeProjPath.length - '.xcodeproj'.length);\n  const projectName = path.basename(projectPath);\n\n  const pbxProject = xcode.project(pbxprojPath);\n\n  await new Promise<void>(resolve =>\n    pbxProject.parse(err => {\n      if (err) {\n        throw new Error(`.pbxproj file parsing issue: ${err.message}.`);\n      }\n      resolve();\n    })\n  );\n\n  const applicationNativeTarget = getApplicationNativeTarget({ project: pbxProject, projectName });\n\n  return {\n    projectName,\n    projectPath,\n    pbxProject,\n    applicationNativeTarget,\n  };\n}\n"]}