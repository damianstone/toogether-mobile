{"version":3,"sources":["TouchableItem.tsx"],"names":["ANDROID_VERSION_LOLLIPOP","TouchableItem","React","Component","render","Platform","OS","Version","style","rest","props","TouchableNativeFeedback","Ripple","pressColor","borderless","Children","only","children"],"mappings":";;;;;;;AASA;;AACA;;;;;;;;;;AAQA,MAAMA,wBAAwB,GAAG,EAAjC;;AAOe,MAAMC,aAAN,SAA4BC,KAAK,CAACC,SAAlC,CAAmD;AAMhEC,EAAAA,MAAM,GAAG;AACP;;;;;;;;AAQA,QACEC,sBAASC,EAAT,KAAgB,SAAhB,IACAD,sBAASE,OAAT,IAAoBP,wBAFtB,EAGE;AACA,YAAM;AAAEQ,QAAAA,KAAF;AAAS,WAAGC;AAAZ,UAAqB,KAAKC,KAAhC;AACA,0BACE,oBAAC,oCAAD,eACMD,IADN;AAEE,QAAA,KAAK,EAAE,IAFT;AAGE,QAAA,UAAU,EAAEE,qCAAwBC,MAAxB,CACV,KAAKF,KAAL,CAAWG,UADD,EAEV,KAAKH,KAAL,CAAWI,UAFD;AAHd,uBAQE,oBAAC,iBAAD;AAAM,QAAA,KAAK,EAAEN;AAAb,SAAqBN,KAAK,CAACa,QAAN,CAAeC,IAAf,CAAoB,KAAKN,KAAL,CAAWO,QAA/B,CAArB,CARF,CADF;AAYD;;AAED,wBACE,oBAAC,6BAAD,EAAsB,KAAKP,KAA3B,EAAmC,KAAKA,KAAL,CAAWO,QAA9C,CADF;AAGD;;AArC+D;;;;gBAA7ChB,a,kBACG;AACpBa,EAAAA,UAAU,EAAE,KADQ;AAEpBD,EAAAA,UAAU,EAAE;AAFQ,C","sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  pressColor: string;\n  borderless: boolean;\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)',\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= ANDROID_VERSION_LOLLIPOP\n    ) {\n      const { style, ...rest } = this.props;\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          style={null}\n          background={TouchableNativeFeedback.Ripple(\n            this.props.pressColor,\n            this.props.borderless\n          )}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    }\n\n    return (\n      <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>\n    );\n  }\n}\n"]}