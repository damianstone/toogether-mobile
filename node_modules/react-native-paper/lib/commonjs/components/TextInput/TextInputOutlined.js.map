{"version":3,"sources":["TextInputOutlined.tsx"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","fontVariant","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","errorColor","isTransparent","alpha","text","rgb","string","primary","placeholder","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","ADORNMENT_OFFSET","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","roundness","maxFontSizeMultiplier","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","LabelBackground","testID","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    fontVariant,\n    lineHeight,\n    height,\n    backgroundColor = colors.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n  if (disabled) {\n    const isTransparent = color(customOutlineColor).alpha() === 0;\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    outlineColor = customOutlineColor || colors.placeholder;\n    errorColor = colors.error;\n  }\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        theme={theme}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID: 'text-input-outlined',\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                fontVariant,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  activeColor: string;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  backgroundColor: ColorValue;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  focused,\n  backgroundColor,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: focused ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}