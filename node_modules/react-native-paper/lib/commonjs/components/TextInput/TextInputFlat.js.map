{"version":3,"sources":["TextInputFlat.tsx"],"names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","isAndroid","Platform","OS","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","fontVariant","height","paddingHorizontal","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","FLAT_INPUT_OFFSET","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","maxFontSizeMultiplier","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","testID","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  activeUnderlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    fontVariant,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n    });\n\n  let inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor;\n\n  if (disabled) {\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    underlineColorCustom = 'transparent';\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    errorColor = colors.error;\n    underlineColorCustom = underlineColor || colors.disabled;\n  }\n\n  const containerStyle = {\n    backgroundColor: theme.dark\n      ? color(colors.background).lighten(0.24).rgb().string()\n      : color(colors.background).darken(0.06).rgb().string(),\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: isAndroid\n      ? {\n          paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n          paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight,\n        }\n      : { paddingRight, paddingLeft },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID: 'text-input-flat',\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              fontWeight,\n              fontVariant,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]}