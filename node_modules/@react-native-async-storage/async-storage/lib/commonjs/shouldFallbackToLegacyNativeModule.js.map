{"version":3,"sources":["shouldFallbackToLegacyNativeModule.js"],"names":["NativeModules","require","module","exports","shouldFallbackToLegacyNativeModule","expoConstants","NativeUnimoduleProxy","modulesConstants","ExponentConstants","isLegacySdkVersion","appOwnership","executionEnvironment","includes"],"mappings":";;AAAA,MAAM;AAACA,EAAAA;AAAD,IAAkBC,OAAO,CAAC,cAAD,CAA/B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,kCAAT,GAA8C;AAAA;;AAC7D,QAAMC,aAAa,4BACjBL,aAAa,CAACM,oBADG,oFACjB,sBAAoCC,gBADnB,2DACjB,uBAAsDC,iBADxD;;AAGA,MAAIH,aAAJ,EAAmB;AACjB;AACJ;AACA;AACA;AACA;AACI,UAAMI,kBAAkB,GAAGJ,aAAa,CAACK,YAAd,IAA8B,CAACL,aAAa,CAACM,oBAAxE;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAIF,kBAAkB,IAAI,CAAC,aAAD,EAAgB,YAAhB,EAA8BG,QAA9B,CAAuCP,aAAa,CAACM,oBAArD,CAA1B,EAAsG;AACpG,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CA3BD","sourcesContent":["const {NativeModules} = require('react-native');\n\nmodule.exports = function shouldFallbackToLegacyNativeModule() {\n  const expoConstants =\n    NativeModules.NativeUnimoduleProxy?.modulesConstants?.ExponentConstants;\n\n  if (expoConstants) {\n    /**\n     * In SDK <= 39, appOwnership is defined in managed apps but executionEnvironment is not.\n     * In bare React Native apps using expo-constants, appOwnership is never defined, so\n     * isLegacySdkVersion will be false in that context.\n     */\n    const isLegacySdkVersion = expoConstants.appOwnership && !expoConstants.executionEnvironment;\n\n    /**\n     * Expo managed apps don't include the @react-native-async-storage/async-storage\n     * native modules yet, but the API interface is the same, so we can use the version\n     * exported from React Native still.\n     *\n     * If in future releases (eg: @react-native-async-storage/async-storage >= 2.0.0) this\n     * will likely not be valid anymore, and the package will need to be included in the Expo SDK\n     * to continue to work.\n     */\n    if (isLegacySdkVersion || ['storeClient', 'standalone'].includes(expoConstants.executionEnvironment)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n"]}