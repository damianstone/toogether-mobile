import * as React from 'react';
import { NavigationProp, NavigationRoute, NavigationDescriptor, NavigationRouteConfigMap, NavigationParams, CreateNavigatorConfig, NavigationTabRouterConfig } from 'react-navigation';
import { NavigationMaterialBottomTabOptions, NavigationTabState, NavigationMaterialBottomTabConfig, NavigationTabProp } from '../types';
export declare type RenderIconProps = {
    route: NavigationRoute<any>;
    focused: boolean;
    tintColor?: string;
    horizontal?: boolean;
};
export declare type NavigationViewProps = {
    navigation: NavigationProp<NavigationTabState>;
    descriptors: {
        [key: string]: NavigationDescriptor<NavigationParams, NavigationMaterialBottomTabOptions, NavigationTabProp>;
    };
    screenProps?: unknown;
    navigationConfig: any;
    getLabelText: (props: {
        route: NavigationRoute;
    }) => string | undefined;
    getAccessibilityLabel: (props: {
        route: NavigationRoute;
    }) => string | undefined;
    getTestID: (props: {
        route: NavigationRoute;
    }) => string | undefined;
    renderIcon: (props: RenderIconProps) => React.ReactNode;
    renderScene: (props: {
        route: NavigationRoute;
    }) => React.ReactNode;
    onIndexChange: (index: number) => void;
    onTabPress: (props: {
        route: NavigationRoute;
    }) => void;
};
export default function createMaterialBottomTabNavigator(routes: NavigationRouteConfigMap<NavigationMaterialBottomTabOptions, NavigationTabProp<NavigationRoute, any>>, config?: CreateNavigatorConfig<NavigationMaterialBottomTabConfig, NavigationTabRouterConfig, NavigationMaterialBottomTabOptions, NavigationTabProp<NavigationRoute, any>>): import("react-navigation").NavigationNavigator<any, NavigationProp<import("react-navigation").NavigationState>>;
