{"version":3,"sources":["NavigationFocusEvents.js"],"names":["NavigationEventManager","React","Component","state","lastState","action","type","context","navigation","onEvent","props","isFocused","previous","routes","index","undefined","current","payload","key","_emitWillFocus","_emitWillBlur","isTransitioning","_lastWillBlurKey","_emitDidBlur","_lastWillFocusKey","_emitDidFocus","route","find","r","target","_lastDidFocusKey","dangerouslyGetParent","_lastDidBlurKey","componentDidMount","_actionSubscription","addListener","_handleAction","_willFocusSubscription","_handleWillFocus","_willBlurSubscription","_handleWillBlur","_didFocusSubscription","_handleDidFocus","_didBlurSubscription","_handleDidBlur","_refocusSubscription","_handleRefocus","componentWillUnmount","remove","render"],"mappings":"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","sourcesContent":["// @ts-check\n\nimport * as React from 'react';\n\n/**\n * @typedef {object} State\n * @prop {number} index\n * @prop {({ key: string } & (State | {}))[]} routes\n * @prop {boolean} [isTransitioning]\n *\n * @typedef {object} ParentPayload\n * @prop {string} type\n * @prop {object} action\n * @prop {State} state\n * @prop {State | {key: string, routes?: undefined, index?: undefined, isTransitioning?: undefined} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Payload\n * @prop {string} type\n * @prop {object} action\n * @prop {State | {key: string}} state\n * @prop {State | {key: string} | undefined | null} lastState\n * @prop {string} [context]\n *\n * @typedef {object} Props\n * @prop {object} navigation\n * @prop {Function} navigation.addListener\n * @prop {Function} navigation.removeListener\n * @prop {() => boolean} navigation.isFocused\n * @prop {() => object | undefined} navigation.dangerouslyGetParent\n * @prop {State} navigation.state\n * @prop {(target: string, type: string, data: any) => void} onEvent\n *\n * @extends {React.Component<Props>}\n */\nexport default class NavigationEventManager extends React.Component {\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    this._actionSubscription = navigation.addListener(\n      'action',\n      this._handleAction\n    );\n\n    this._willFocusSubscription = navigation.addListener(\n      'willFocus',\n      this._handleWillFocus\n    );\n\n    this._willBlurSubscription = navigation.addListener(\n      'willBlur',\n      this._handleWillBlur\n    );\n\n    this._didFocusSubscription = navigation.addListener(\n      'didFocus',\n      this._handleDidFocus\n    );\n\n    this._didBlurSubscription = navigation.addListener(\n      'didBlur',\n      this._handleDidBlur\n    );\n\n    this._refocusSubscription = navigation.addListener(\n      'refocus',\n      this._handleRefocus\n    );\n  }\n\n  componentWillUnmount() {\n    this._actionSubscription?.remove();\n    this._willFocusSubscription?.remove();\n    this._willBlurSubscription?.remove();\n    this._didFocusSubscription?.remove();\n    this._didBlurSubscription?.remove();\n    this._refocusSubscription?.remove();\n  }\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _actionSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _willBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didFocusSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _didBlurSubscription;\n\n  /**\n   * @type {{ remove(): void } | undefined}\n   */\n  _refocusSubscription;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastWillFocusKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidBlurKey;\n\n  /**\n   * @type {string | undefined}\n   */\n  _lastDidFocusKey;\n\n  /**\n   * The 'action' event will fire when navigation state changes.\n   * Detect if the focused route changed here and emit appropriate events.\n   *\n   * @param {ParentPayload} payload\n   */\n  _handleAction = ({ state, lastState, action, type, context }) => {\n    const { navigation, onEvent } = this.props;\n\n    // We should only emit events when the navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (!navigation.isFocused()) {\n      return;\n    }\n\n    const previous = lastState\n      ? lastState.routes?.[lastState.index]\n      : undefined;\n    const current = state.routes[state.index];\n\n    const payload = {\n      context: `${current.key}:${action.type}_${context || 'Root'}`,\n      state: current,\n      lastState: previous,\n      action,\n      type,\n    };\n\n    if (previous?.key !== current.key) {\n      this._emitWillFocus(current.key, payload);\n\n      if (previous?.key) {\n        this._emitWillBlur(previous.key, payload);\n      }\n    }\n\n    if (\n      lastState?.isTransitioning !== state.isTransitioning &&\n      state.isTransitioning === false\n    ) {\n      if (this._lastWillBlurKey) {\n        this._emitDidBlur(this._lastWillBlurKey, payload);\n      }\n\n      if (this._lastWillFocusKey) {\n        this._emitDidFocus(this._lastWillFocusKey, payload);\n      }\n    }\n\n    onEvent(current.key, 'action', payload);\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillFocus(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleWillBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    this._emitWillBlur(route.key, {\n      context: `${route.key}:${action.type}_${context || 'Root'}`,\n      state: route,\n      lastState: lastState?.routes?.find((r) => r.key === route.key),\n      action,\n      type,\n    });\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidFocus = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillFocusKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillFocusKey\n      );\n\n      if (route) {\n        this._emitDidFocus(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {ParentPayload} payload\n   */\n  _handleDidBlur = ({ lastState, action, context, type }) => {\n    const { navigation } = this.props;\n\n    if (this._lastWillBlurKey) {\n      const route = navigation.state.routes.find(\n        (r) => r.key === this._lastWillBlurKey\n      );\n\n      if (route) {\n        this._emitDidBlur(route.key, {\n          context: `${route.key}:${action.type}_${context || 'Root'}`,\n          state: route,\n          lastState: lastState?.routes?.find((r) => r.key === route.key),\n          action,\n          type,\n        });\n      }\n    }\n  };\n\n  _handleRefocus = () => {\n    const { onEvent, navigation } = this.props;\n    const route = navigation.state.routes[navigation.state.index];\n\n    onEvent(route.key, 'refocus');\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillFocus = (target, payload) => {\n    if (this._lastWillBlurKey === target) {\n      this._lastWillBlurKey = undefined;\n    }\n\n    if (this._lastWillFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = undefined;\n    this._lastWillFocusKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willFocus', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidFocus(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitWillBlur = (target, payload) => {\n    if (this._lastWillFocusKey === target) {\n      this._lastWillFocusKey = undefined;\n    }\n\n    if (this._lastWillBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = undefined;\n    this._lastWillBlurKey = target;\n\n    const { navigation, onEvent } = this.props;\n\n    onEvent(target, 'willBlur', payload);\n\n    if (\n      typeof navigation.state.isTransitioning !== 'boolean' ||\n      (navigation.state.isTransitioning !== true &&\n        !navigation.dangerouslyGetParent())\n    ) {\n      this._emitDidBlur(target, payload);\n    }\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidFocus = (target, payload) => {\n    if (this._lastWillFocusKey !== target || this._lastDidFocusKey === target) {\n      return;\n    }\n\n    this._lastDidFocusKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didFocus', payload);\n  };\n\n  /**\n   * @param {string} target\n   * @param {Payload} payload\n   */\n  _emitDidBlur = (target, payload) => {\n    if (this._lastWillBlurKey !== target || this._lastDidBlurKey === target) {\n      return;\n    }\n\n    this._lastDidBlurKey = target;\n\n    const { onEvent } = this.props;\n\n    onEvent(target, 'didBlur', payload);\n  };\n\n  render() {\n    return null;\n  }\n}\n"]}