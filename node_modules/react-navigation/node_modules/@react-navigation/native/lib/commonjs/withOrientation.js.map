{"version":3,"sources":["withOrientation.js"],"names":["isOrientationLandscape","width","height","WrappedComponent","withOrientation","React","Component","constructor","window","isLandscape","setState","Dimensions","get","state","componentDidMount","addEventListener","handleOrientationChange","componentWillUnmount","removeEventListener","render","props"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;AAEO,MAAMA,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuBD,KAAK,GAAGC,MAA9D;;;;AAEQ,kBAAUC,gBAAV,EAA4B;AACzC,QAAMC,eAAN,SAA8BC,KAAK,CAACC,SAApC,CAA8C;AAC5CC,IAAAA,WAAW,GAAG;AACZ;;AADY,uDAeY,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAgB;AACxC,cAAMC,WAAW,GAAGT,sBAAsB,CAACQ,MAAD,CAA1C;AACA,aAAKE,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AACD,OAlBa;;AAGZ,YAAMA,YAAW,GAAGT,sBAAsB,CAACW,wBAAWC,GAAX,CAAe,QAAf,CAAD,CAA1C;;AACA,WAAKC,KAAL,GAAa;AAAEJ,QAAAA,WAAW,EAAXA;AAAF,OAAb;AACD;;AAEDK,IAAAA,iBAAiB,GAAG;AAClBH,8BAAWI,gBAAX,CAA4B,QAA5B,EAAsC,KAAKC,uBAA3C;AACD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrBN,8BAAWO,mBAAX,CAA+B,QAA/B,EAAyC,KAAKF,uBAA9C;AACD;;AAODG,IAAAA,MAAM,GAAG;AACP,0BAAO,oBAAC,gBAAD,eAAsB,KAAKC,KAA3B,EAAsC,KAAKP,KAA3C,EAAP;AACD;;AAvB2C;;AA0B9C,SAAO,mCAAoBT,eAApB,EAAqCD,gBAArC,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function (WrappedComponent) {\n  class withOrientation extends React.Component {\n    constructor() {\n      super();\n\n      const isLandscape = isOrientationLandscape(Dimensions.get('window'));\n      this.state = { isLandscape };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}\n"]}