{"version":3,"sources":["ResourceSavingSceneView.js"],"names":["FAR_FAR_AWAY","ResourceSavingSceneView","React","PureComponent","getDerivedStateFromProps","nextProps","prevState","isFocused","awake","constructor","props","animationEnabled","swipeEnabled","state","lazy","render","childNavigation","removeClippedSubviews","rest","styles","container","Platform","OS","_mustAlwaysBeVisible","innerAttached","innerDetached","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,YAAY,GAAG,IAArB,C,CAA2B;;AAE3B,MAAMC,uBAAN,SAAsCC,KAAK,CAACC,aAA5C,CAA0D;AACxD,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,QAAID,SAAS,CAACE,SAAV,IAAuB,CAACD,SAAS,CAACE,KAAtC,EAA6C;AAC3C,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,kDAQI,MAAM;AAC3B,aAAO,KAAKA,KAAL,CAAWC,gBAAX,IAA+B,KAAKD,KAAL,CAAWE,YAAjD;AACD,KAVkB;;AAGjB,SAAKC,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAEE,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACH,SAAnB,GAA+B;AAD3B,KAAb;AAGD;;AAMDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKK,KAAvB;AACA,UAAM;AACJN,MAAAA,SADI;AAEJS,MAAAA,eAFI;AAGJC,MAAAA,qBAHI;AAIJ,SAAGC;AAJC,QAKF,KAAKR,KALT;AAOA,wBACE,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAES,MAAM,CAACC,SADhB;AAEE,MAAA,WAAW,EAAE,KAFf;AAGE,MAAA,qBAAqB,EACnBC,sBAASC,EAAT,KAAgB,SAAhB,GACIL,qBADJ,GAEI,CAACV,SAAD,IAAcU;AANtB,oBASE,oBAAC,iBAAD;AACE,MAAA,KAAK,EACH,KAAKM,oBAAL,MAA+BhB,SAA/B,GACIY,MAAM,CAACK,aADX,GAEIL,MAAM,CAACM;AAJf,OAOGjB,KAAK,gBAAG,oBAAC,eAAD,eAAeU,IAAf;AAAqB,MAAA,UAAU,EAAEF;AAAjC,OAAH,GAA0D,IAPlE,CATF,CADF;AAqBD;;AAnDuD;;AAsD1D,MAAMG,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BL,EAAAA,aAAa,EAAE;AACbI,IAAAA,IAAI,EAAE;AADO,GALgB;AAQ/BH,EAAAA,aAAa,EAAE;AACbG,IAAAA,IAAI,EAAE,CADO;AAEbE,IAAAA,GAAG,EAAE9B;AAFQ;AARgB,CAAlB,CAAf;;eAceC,uB","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true,\n    };\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n\n    return (\n      <View\n        style={styles.container}\n        collapsable={false}\n        removeClippedSubviews={\n          Platform.OS === 'android'\n            ? removeClippedSubviews\n            : !isFocused && removeClippedSubviews\n        }\n      >\n        <View\n          style={\n            this._mustAlwaysBeVisible() || isFocused\n              ? styles.innerAttached\n              : styles.innerDetached\n          }\n        >\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  innerAttached: {\n    flex: 1,\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n\nexport default ResourceSavingSceneView;\n"]}