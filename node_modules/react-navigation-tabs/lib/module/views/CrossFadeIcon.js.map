{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","View","StyleSheet","Animated","TabBarIcon","Component","render","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","props","styles","icon","opacity","focused","tintColor","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAuD,cAAvD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAmBA,eAAe,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAgD;AAC7DC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,eAHI;AAIJC,MAAAA,eAJI;AAKJC,MAAAA,iBALI;AAMJC,MAAAA,UANI;AAOJC,MAAAA,UAPI;AAQJC,MAAAA;AARI,QASF,KAAKC,KATT,CADO,CAYP;AACA;;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED;AAAb,oBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACE,MAAM,CAACC,IAAR,EAAc;AAAEC,QAAAA,OAAO,EAAEV;AAAX,OAAd;AAAtB,OACGI,UAAU,CAAC;AACVL,MAAAA,KADU;AAEVY,MAAAA,OAAO,EAAE,IAFC;AAGVN,MAAAA,UAHU;AAIVO,MAAAA,SAAS,EAAEV;AAJD,KAAD,CADb,CADF,eASE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACM,MAAM,CAACC,IAAR,EAAc;AAAEC,QAAAA,OAAO,EAAET;AAAX,OAAd;AAAtB,OACGG,UAAU,CAAC;AACVL,MAAAA,KADU;AAEVY,MAAAA,OAAO,EAAE,KAFC;AAGVN,MAAAA,UAHU;AAIVO,MAAAA,SAAS,EAAET;AAJD,KAAD,CADb,CATF,CADF;AAoBD;;AAnC4D;AAsC/D,MAAMK,MAAM,GAAGd,UAAU,CAACmB,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE,UAJN;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAUJ;AACAC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\n\ntype Props = {\n  route: NavigationRoute;\n  horizontal?: boolean;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  renderIcon: (props: {\n    route: NavigationRoute;\n    focused: boolean;\n    tintColor?: string;\n    horizontal?: boolean;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]}