{"version":3,"sources":["GestureHandlerRootView.android.tsx"],"names":["GestureHandlerRootViewNative","GestureHandlerRootViewContext","React","createContext","GestureHandlerRootView","children","rest","available"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;AAEA,MAAMA,4BAA4B,GAAG,yCACnC,wBADmC,CAArC;AAIA,MAAMC,6BAA6B,gBAAGC,KAAK,CAACC,aAAN,CAAoB,KAApB,CAAtC;;AAIe,SAASC,sBAAT,CAAgC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAhC,EAA8D;AAC3E,sBACE,oBAAC,6BAAD,CAA+B,QAA/B,QACIC,SAAD,IAAe;AACd,QAAIA,SAAJ,EAAe;AACb;AACA;AACA;AACA,0BAAO,oBAAC,iBAAD,EAAUD,IAAV,EAAiBD,QAAjB,CAAP;AACD;;AAED,wBACE,oBAAC,6BAAD,CAA+B,QAA/B;AAAwC,MAAA,KAAK;AAA7C,oBACE,oBAAC,4BAAD,EAAkCC,IAAlC,EACGD,QADH,CADF,CADF;AAOD,GAhBH,CADF;AAoBD","sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { View, requireNativeComponent } from 'react-native';\n\nconst GestureHandlerRootViewNative = requireNativeComponent(\n  'GestureHandlerRootView'\n);\n\nconst GestureHandlerRootViewContext = React.createContext(false);\n\ntype Props = PropsWithChildren<Record<string, unknown>>;\n\nexport default function GestureHandlerRootView({ children, ...rest }: Props) {\n  return (\n    <GestureHandlerRootViewContext.Consumer>\n      {(available) => {\n        if (available) {\n          // If we already have a parent wrapped in the gesture handler root view,\n          // We don't need to wrap it again in root view\n          // We still wrap it in a normal view so our styling stays the same\n          return <View {...rest}>{children}</View>;\n        }\n\n        return (\n          <GestureHandlerRootViewContext.Provider value>\n            <GestureHandlerRootViewNative {...rest}>\n              {children}\n            </GestureHandlerRootViewNative>\n          </GestureHandlerRootViewContext.Provider>\n        );\n      }}\n    </GestureHandlerRootViewContext.Consumer>\n  );\n}\n"]}